{"version":3,"sources":["C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/$_gendir lazy","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.component.css","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.component.html","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.component.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.module.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/domain/task.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/services/populate-tasks.service.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-add/task-add.component.css","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-add/task-add.component.html","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-add/task-add.component.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-list/task-list.component.css","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-list/task-list.component.html","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-list/task-list.component.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/tasks/tasks.component.css","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/tasks/tasks.component.html","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/tasks/tasks.component.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/environments/environment.ts","C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-tasks></app-tasks>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.component.ts","import { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskAddComponent } from './task-add/task-add.component';\nimport { PopulateTasksService } from './services/populate-tasks.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TaskListComponent,\n    TaskAddComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [PopulateTasksService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/app.module.ts","export class Task {\r\n  public id: number;\r\n  public name: string;\r\n  public localDate: string;\r\n  public completed: boolean;\r\n\r\n  constructor(name: string, completed: boolean, localDate: string) {\r\n      this.name = name;\r\n      this.completed = completed;\r\n      this.localDate = localDate;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/domain/task.ts","import { Task } from './../domain/task';\r\nimport { Injectable } from '@angular/core';\r\nimport {Http, Headers, Response, RequestOptions} from '@angular/http';\r\n// import 'rxjs/Rx';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class PopulateTasksService {\r\n\r\n  onTaskAdded = new EventEmitter<Task>();\r\n\r\n  private baseTasksQueryUrl: string;\r\n\r\n  public constructor(private http: Http) {\r\n    this.baseTasksQueryUrl = 'http://localhost:8080/api/tasks';\r\n}\r\n  // Observable<Task>\r\n  public getTasks() {\r\n        return this.http.get(this.baseTasksQueryUrl)\r\n        .map(\r\n          (response: Response) => {\r\n                console.log(response.json());\r\n              return response.json();\r\n          }\r\n        );\r\n  }\r\n\r\n  // http.post (url, object-to-post)\r\n  public saveTask(task: Task, checked: boolean) {\r\n    task.completed = checked;\r\n    // const headers = new Headers();\r\n    return this.http.post(this.baseTasksQueryUrl + '/save', task)\r\n    .map(\r\n      (response: Response) => {\r\n        return response.json();\r\n      }\r\n    );\r\n  }\r\n\r\n  public addTask(task: Task) {\r\n    // const headers = new Headers();\r\n    return this.http.post(this.baseTasksQueryUrl + '/save', task)\r\n    .map(\r\n      (response: Response) => {\r\n        return response.json();\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/services/populate-tasks.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-add/task-add.component.css\n// module id = ../../../../../src/app/task-add/task-add.component.css\n// module chunks = main","module.exports = \"<div class=form-group >\\n  <input type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"newTask\\\"\\n        (keyup.enter)=\\\"onTaskAdd($event)\\\"\\n        placeholder=\\\"Add New Task\\\"/>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-add/task-add.component.html\n// module id = ../../../../../src/app/task-add/task-add.component.html\n// module chunks = main","import { Task } from '../domain/task';\nimport { PopulateTasksService } from '../services/populate-tasks.service';\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-task-add',\n  templateUrl: './task-add.component.html',\n  styleUrls: ['./task-add.component.css']\n})\nexport class TaskAddComponent implements OnInit {\n\n  public newTask: string;\n\n  @Output()\n  public taskEmitter = new EventEmitter<Task>();\n\n  public addedTask: Task;\n\n\n  constructor(private populateTaskService: PopulateTasksService) {\n\n   }\n\n  ngOnInit() {\n  }\n\n  public onTaskAdd(event) {\n    const task = new Task(event.target.value, false, this.getTodaysDate());\n    this.populateTaskService.addTask(task)\n        .subscribe(\n          (newTask: Task) => {\n              //console.log(response);\n              this.newTask = '';\n              this.populateTaskService.onTaskAdded.emit(newTask);\n          }\n      );\n    console.log('added task');\n\n  }\n\n  public emitTask() {\n    this.taskEmitter.emit();\n  }\n\n  public getTodaysDate() {\n    const today = new Date();\n    let dd: any = today.getDate();\n    let mm: any = today.getMonth() + 1;\n    let yyyy: any = today.getFullYear();\n\n    if (dd <10){\n      dd = '0' + dd;\n    }\n    if (mm <10){\n      mm = '0' + mm;\n    }\n    return mm + '/' + dd + '/' + yyyy;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-add/task-add.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-list/task-list.component.css\n// module id = ../../../../../src/app/task-list/task-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <tr *ngFor=\\\"let task of taskList; let i=index\\\" class=\\\"list-group-item\\\">\\n    <td>{{task.id}}</td>\\n    <td>{{task.name}}</td>\\n    <td>{{task.localDate}}</td>\\n    <td><input type=\\\"checkbox\\\" name=\\\"completed\\\" (change)=\\\"onTaskChange($event,task)\\\" [checked]=\\\"task.completed\\\"></td>\\n\\n  </tr>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-list/task-list.component.html\n// module id = ../../../../../src/app/task-list/task-list.component.html\n// module chunks = main","import { PopulateTasksService } from './../services/populate-tasks.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Task } from '../domain/task';\nimport { SimpleChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n  public taskList: Task[] = [];\n  // public response;\n\n  constructor(private populateTasksService: PopulateTasksService) {\n  }\n\n  ngOnInit() {\n     this.populateTasksService.getTasks().subscribe(\n      (tasks: any[]) => this.taskList = tasks,\n      (error) => console.log(error)\n    );\n\n    this.populateTasksService.onTaskAdded.subscribe(\n      (task: Task) => this.taskList.push(task)\n    );\n\n  }\n\n  onTaskChange(event, task) {\n    console.log(task);\n    this.populateTasksService.saveTask(task, event.target.checked)\n        .subscribe(\n            (response: Response) => {\n                console.log(response);\n            }\n        );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/task-list/task-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/tasks/tasks.component.css\n// module id = ../../../../../src/app/tasks/tasks.component.css\n// module chunks = main","module.exports = \"<app-task-add></app-task-add>\\n<app-task-list></app-task-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/tasks/tasks.component.html\n// module id = ../../../../../src/app/tasks/tasks.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Task } from '../domain/task';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/app/tasks/tasks.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/atp1ahm/workspaceSpringUdemy/tasks/src/main/frontend/src/main.ts"],"sourceRoot":"webpack:///"}